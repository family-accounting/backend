{
	"info": {
		"_postman_id": "family-finance-manager-collection",
		"name": "Family Finance Manager API",
		"description": "Complete API collection for the Family Finance Manager application with authentication, user management, accounts, transactions, and loans.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "family-finance-manager"
	},
	"item": [
		{
			"name": "üîê Authentication",
			"item": [
				{
					"name": "Signup",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"newuser@family.com\",\n  \"password\": \"password123\",\n  \"name\": \"New Family Member\",\n  \"role\": \"MEMBER\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/signup",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"signup"
							]
						},
						"description": "Create a new user account"
					},
					"response": []
				},
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"admin@family.com\",\n  \"password\": \"admin123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Authenticate user and get JWT token"
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('jwt_token', response.access_token);",
									"    pm.environment.set('current_user_id', response.user.id);",
									"    pm.environment.set('current_user_role', response.user.role);",
									"    console.log('JWT Token saved:', response.access_token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Get Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/auth/profile",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"profile"
							]
						},
						"description": "Get current user profile (requires authentication)"
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/auth/refresh",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"refresh"
							]
						},
						"description": "Refresh JWT token"
					},
					"response": []
				}
			],
			"description": "Authentication endpoints for user signup, login, and profile management"
		},
		{
			"name": "üë• Users",
			"item": [
				{
					"name": "List All Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							]
						},
						"description": "List all users (Admin/Member only)"
					},
					"response": []
				},
				{
					"name": "Get Family Members",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/users/family-members",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"family-members"
							]
						},
						"description": "List family members (all roles)"
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/users/{{current_user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"{{current_user_id}}"
							]
						},
						"description": "Get user details (Admin or own profile only)"
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Updated Name\",\n  \"email\": \"updated@family.com\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/users/{{current_user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"{{current_user_id}}"
							]
						},
						"description": "Update user profile (Admin or own profile only)"
					},
					"response": []
				},
				{
					"name": "Change User Role",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"role\": \"MEMBER\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/users/{{current_user_id}}/role",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"{{current_user_id}}",
								"role"
							]
						},
						"description": "Change user role (Admin only)"
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/users/{{current_user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"{{current_user_id}}"
							]
						},
						"description": "Delete user (Admin only)"
					},
					"response": []
				}
			],
			"description": "User management endpoints for CRUD operations and role management"
		},
		{
			"name": "üè¶ Accounts",
			"item": [
				{
					"name": "Create Account",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"My Savings Account\",\n  \"type\": \"BANK\",\n  \"currency\": \"USD\",\n  \"balance\": 1000,\n  \"description\": \"Personal savings account\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/accounts",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"accounts"
							]
						},
						"description": "Create new account"
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('sample_account_id', response.id);",
									"    console.log('Account ID saved:', response.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "List Accounts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/accounts",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"accounts"
							]
						},
						"description": "List user accounts"
					},
					"response": []
				},
				{
					"name": "Get Accounts by Currency",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/accounts/by-currency/USD",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"accounts",
								"by-currency",
								"USD"
							]
						},
						"description": "Filter accounts by currency"
					},
					"response": []
				},
				{
					"name": "Get Total Balance by Currency",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/accounts/balance/USD",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"accounts",
								"balance",
								"USD"
							]
						},
						"description": "Get total balance by currency"
					},
					"response": []
				},
				{
					"name": "Get Account Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/accounts/{{sample_account_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"accounts",
								"{{sample_account_id}}"
							]
						},
						"description": "Get account details"
					},
					"response": []
				},
				{
					"name": "Update Account",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Updated Account Name\",\n  \"description\": \"Updated description\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/accounts/{{sample_account_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"accounts",
								"{{sample_account_id}}"
							]
						},
						"description": "Update account"
					},
					"response": []
				},
				{
					"name": "Delete Account",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/accounts/{{sample_account_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"accounts",
								"{{sample_account_id}}"
							]
						},
						"description": "Delete account"
					},
					"response": []
				}
			],
			"description": "Account management endpoints for creating, updating, and managing financial accounts"
		},
		{
			"name": "üí∞ Transactions",
			"item": [
				{
					"name": "Create Transaction",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"EXPENSE\",\n  \"amount\": 50,\n  \"currency\": \"USD\",\n  \"description\": \"Grocery shopping\",\n  \"transactionDate\": \"2024-01-15\",\n  \"accountId\": \"{{sample_account_id}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/transactions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"transactions"
							]
						},
						"description": "Create new transaction"
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('sample_transaction_id', response.id);",
									"    console.log('Transaction ID saved:', response.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Create Internal Transfer",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"amount\": 100,\n  \"currency\": \"USD\",\n  \"description\": \"Transfer to family member\",\n  \"transactionDate\": \"2024-01-15\",\n  \"accountId\": \"{{sample_account_id}}\",\n  \"targetUserId\": \"{{current_user_id}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/transactions/internal-transfer",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"transactions",
								"internal-transfer"
							]
						},
						"description": "Create internal transfer (Admin only)"
					},
					"response": []
				},
				{
					"name": "List Transactions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/transactions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"transactions"
							]
						},
						"description": "List transactions"
					},
					"response": []
				},
				{
					"name": "Get Transactions by Type",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/transactions/by-type/EXPENSE",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"transactions",
								"by-type",
								"EXPENSE"
							]
						},
						"description": "Filter transactions by type"
					},
					"response": []
				},
				{
					"name": "Get Transactions by Date Range",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/transactions/by-date-range?startDate=2024-01-01&endDate=2024-01-31",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"transactions",
								"by-date-range"
							],
							"query": [
								{
									"key": "startDate",
									"value": "2024-01-01"
								},
								{
									"key": "endDate",
									"value": "2024-01-31"
								}
							]
						},
						"description": "Filter transactions by date range"
					},
					"response": []
				},
				{
					"name": "Get Transaction Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/transactions/{{sample_transaction_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"transactions",
								"{{sample_transaction_id}}"
							]
						},
						"description": "Get transaction details"
					},
					"response": []
				},
				{
					"name": "Update Transaction",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"Updated description\",\n  \"transactionDate\": \"2024-01-16\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/transactions/{{sample_transaction_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"transactions",
								"{{sample_transaction_id}}"
							]
						},
						"description": "Update transaction (limited fields)"
					},
					"response": []
				},
				{
					"name": "Delete Transaction",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/transactions/{{sample_transaction_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"transactions",
								"{{sample_transaction_id}}"
							]
						},
						"description": "Delete transaction (Admin only)"
					},
					"response": []
				}
			],
			"description": "Transaction management endpoints for recording and managing financial transactions"
		},
		{
			"name": "üìù Loans",
			"item": [
				{
					"name": "Create Loan",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"amount\": 500,\n  \"currency\": \"USD\",\n  \"description\": \"Loan for car repair\",\n  \"dueDate\": \"2024-06-15\",\n  \"borrowerId\": \"{{current_user_id}}\",\n  \"accountId\": \"{{sample_account_id}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/loans",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"loans"
							]
						},
						"description": "Create new loan"
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('sample_loan_id', response.id);",
									"    console.log('Loan ID saved:', response.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "List Loans",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/loans",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"loans"
							]
						},
						"description": "List loans"
					},
					"response": []
				},
				{
					"name": "Get Pending Loans",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/loans/pending",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"loans",
								"pending"
							]
						},
						"description": "List pending loans"
					},
					"response": []
				},
				{
					"name": "Get Overdue Loans",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/loans/overdue",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"loans",
								"overdue"
							]
						},
						"description": "List overdue loans"
					},
					"response": []
				},
				{
					"name": "Get Loan Summary",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/loans/summary",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"loans",
								"summary"
							]
						},
						"description": "Get loan summary"
					},
					"response": []
				},
				{
					"name": "Get Loan Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/loans/{{sample_loan_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"loans",
								"{{sample_loan_id}}"
							]
						},
						"description": "Get loan details"
					},
					"response": []
				},
				{
					"name": "Update Loan",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"Updated description\",\n  \"dueDate\": \"2024-07-15\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/loans/{{sample_loan_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"loans",
								"{{sample_loan_id}}"
							]
						},
						"description": "Update loan"
					},
					"response": []
				},
				{
					"name": "Mark Loan as Paid",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/loans/{{sample_loan_id}}/mark-paid",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"loans",
								"{{sample_loan_id}}",
								"mark-paid"
							]
						},
						"description": "Mark loan as paid"
					},
					"response": []
				},
				{
					"name": "Delete Loan",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/loans/{{sample_loan_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"loans",
								"{{sample_loan_id}}"
							]
						},
						"description": "Delete loan (Admin only)"
					},
					"response": []
				}
			],
			"description": "Loan management endpoints for creating, tracking, and managing loans between family members"
		},
		{
			"name": "üß™ Test Data",
			"item": [
				{
					"name": "Create Test User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"testuser@family.com\",\n  \"password\": \"test123\",\n  \"name\": \"Test User\",\n  \"role\": \"MEMBER\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/signup",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"signup"
							]
						},
						"description": "Create a test user for testing purposes"
					},
					"response": []
				},
				{
					"name": "Create Test Account",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Test Account\",\n  \"type\": \"CASH\",\n  \"currency\": \"USD\",\n  \"balance\": 200,\n  \"description\": \"Test cash account\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/accounts",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"accounts"
							]
						},
						"description": "Create a test account for testing purposes"
					},
					"response": []
				},
				{
					"name": "Create Test Transaction",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"INCOME\",\n  \"amount\": 100,\n  \"currency\": \"USD\",\n  \"description\": \"Test income\",\n  \"transactionDate\": \"2024-01-15\",\n  \"accountId\": \"{{sample_account_id}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/transactions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"transactions"
							]
						},
						"description": "Create a test transaction for testing purposes"
					},
					"response": []
				}
			],
			"description": "Test data creation endpoints for setting up sample data during development and testing"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Set default values if not already set",
					"if (!pm.environment.get('base_url')) {",
					"    pm.environment.set('base_url', 'http://localhost:3000');",
					"}",
					"",
					"// Log current environment values",
					"console.log('Base URL:', pm.environment.get('base_url'));",
					"console.log('JWT Token:', pm.environment.get('jwt_token') ? 'Set' : 'Not set');",
					"console.log('Current User ID:', pm.environment.get('current_user_id'));"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "jwt_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "current_user_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "current_user_role",
			"value": "",
			"type": "string"
		},
		{
			"key": "sample_account_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "sample_transaction_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "sample_loan_id",
			"value": "",
			"type": "string"
		}
	]
}
